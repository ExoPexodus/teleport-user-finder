
version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      # Frontend authentication credentials for protected APIs
      - API_USERNAME=${API_USERNAME:-admin}
      - API_PASSWORD=${API_PASSWORD:-password}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8888}
    depends_on:
      - backend
    networks:
      - teleport-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Database connection
      - DB_HOST=postgres
      - DB_NAME=teleport
      - DB_USER=teleport
      - DB_PASSWORD=teleport123
      - DEBUG=False
      # Teleport authentication
      - SECRET_KEY=${SECRET_KEY:-default_secret_key}
      - AUTH_USERNAME=${AUTH_USERNAME:-admin}
      - AUTH_PASSWORD_HASH=${AUTH_PASSWORD_HASH}
      # SSH configuration for teleport
      - SSH_HOSTS=${SSH_HOSTS:-'{"default":"localhost"}'}
      - SSH_PORT=${SSH_PORT:-22}
      - SSH_USER=${SSH_USER:-root}
      - SSH_KEY_PATH=${SSH_KEY_PATH:-/app/ssh_key}
      # Keycloak configuration
      - KEYCLOAK_URL=${KEYCLOAK_URL:-http://keycloak:8080}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-teleport}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-teleport-client}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      # Frontend URL for SSO callback
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8888}
    volumes:
      - ${SSH_KEY_LOCAL_PATH:-./ssh_key}:${SSH_KEY_PATH:-/app/ssh_key}:ro
    depends_on:
      postgres:
        condition: service_started
    # Not exposing backend port to host machine, only accessible within Docker network
    networks:
      - teleport-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=teleport
      - POSTGRES_USER=teleport
      - POSTGRES_PASSWORD=teleport123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - teleport-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U teleport"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  teleport-network:
    driver: bridge

volumes:
  postgres-data:
